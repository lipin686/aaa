說一說你能想到的sql語句優化，至少五種

避免select *，將需要查找的欄位列出來；
使用連接（join）來代替子查詢；
拆分大的delete或insert語句；
使用limit對查詢結果的記錄進行限定；
用 exists 代替 in 是一個好的選擇；
用Where子句替換HAVING 子句 因為HAVING 只會在檢索出所有記錄之後才對結果集進行過濾；
不要在 where 子句中的「=」左邊進行函數、算術運算或其他表達式運算，否則系統將可能無法正確使用索引
儘量避免在where 子句中對欄位進行 null 值判斷，否則將導致引擎放棄使用索引而進行全表掃描；
儘量避免在 where 子句中使用 or 來連接條件，否則將導致引擎放棄使用索引而進行全表掃描；
儘量避免在 where 子句中使用!=或<>操作符，否則將引擎放棄使用索引而進行全表掃描；

說一說你能想到的sql語句優化，至少五種

避免select *，將需要查找的欄位列出來；
使用連接（join）來代替子查詢；
拆分大的delete或insert語句；
使用limit對查詢結果的記錄進行限定；
用 exists 代替 in 是一個好的選擇；
用Where子句替換HAVING 子句 因為HAVING 只會在檢索出所有記錄之後才對結果集進行過濾；
不要在 where 子句中的「=」左邊進行函數、算術運算或其他表達式運算，否則系統將可能無法正確使用索引
儘量避免在where 子句中對欄位進行 null 值判斷，否則將導致引擎放棄使用索引而進行全表掃描；
儘量避免在 where 子句中使用 or 來連接條件，否則將導致引擎放棄使用索引而進行全表掃描；
儘量避免在 where 子句中使用!=或<>操作符，否則將引擎放棄使用索引而進行全表掃描；


原文網址：https://kknews.cc/code/qgklr3b.html
